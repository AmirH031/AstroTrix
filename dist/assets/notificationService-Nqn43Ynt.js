import{c as t}from"./createLucideIcon-BHDkDqnO.js";
/**
 * @license lucide-react v0.474.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const e=t("Bell",[["path",{d:"M10.268 21a2 2 0 0 0 3.464 0",key:"vwvbt9"}],["path",{d:"M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326",key:"11g9vi"}]]);const i=new class{constructor(){this.isSupported="Notification"in window,this.permission=this.isSupported?Notification.permission:"denied",this.settings=this.loadSettings(),this.scheduledTimeouts=new Map,this.taskCompletionCallbacks=new Map,this.scheduledTasks=new Set,this.registerServiceWorker()}async registerServiceWorker(){if("serviceWorker"in navigator)try{await navigator.serviceWorker.register("/sw.js")}catch(t){}}loadSettings(){const t={taskReminder:{enabled:!0,minutesBefore:5,sound:"timeout"},taskCompletion:{enabled:!0,sound:"completed"},taskArchive:{enabled:!0,sound:"archive"},globalEnabled:!0,soundEnabled:!0,fallbackToast:!0};try{const e=localStorage.getItem("astrotrix_notification_settings");return e?{...t,...JSON.parse(e)}:t}catch(e){return t}}saveSettings(t){this.settings={...this.settings,...t},localStorage.setItem("astrotrix_notification_settings",JSON.stringify(this.settings))}async requestPermission(){if(!this.isSupported)throw new Error("Notifications not supported");return"granted"===this.permission||(this.permission=await Notification.requestPermission(),"granted"===this.permission)}isNotificationEnabled(t){if(!this.settings.globalEnabled)return!1;switch(t){case"task_reminder":return this.settings.taskReminder.enabled;case"task_completion":return this.settings.taskCompletion.enabled;case"task_archive":return this.settings.taskArchive.enabled;default:return!0}}playNotificationSound(t){if(!this.settings.soundEnabled)return;let e;switch(t){case"task_reminder":e="/AstroTrix/sounds/timeout.wav";break;case"task_completion":default:e="/AstroTrix/sounds/completed.wav";break;case"task_archive":e="/AstroTrix/sounds/archive.wav"}const i=new Audio(e);i.volume=.7,i.play().catch(t=>{})}showLocalNotification(t,e={}){if("granted"!==this.permission)return this.settings.fallbackToast&&this.onShowToast&&this.onShowToast(t,e.body),null;try{const i=new Notification(t,{icon:"/AstroTrix/favicon.ico",badge:"/AstroTrix/favicon.ico",requireInteraction:!0,silent:!0,...e});return i.onclick=()=>{window.focus(),i.close(),e.data?.action&&this.handleNotificationAction(e.data.action,e.data.taskId)},setTimeout(()=>{i.close()},1e4),i}catch(i){return this.settings.fallbackToast&&this.onShowToast&&this.onShowToast(t,e.body),null}}handleNotificationAction(t,e){switch(t){case"mark_done":this.onTaskMarkDone?.(e);break;case"snooze":this.onTaskSnooze?.(e,5);break;case"extend":this.onTaskExtend?.(e,15)}}scheduleTaskNotifications(t){if(!this.settings.globalEnabled||!t.time||t.completed||this.scheduledTasks.has(t.id))return;this.cancelTaskNotifications(t.id),this.scheduledTasks.add(t.id);const e=new Date,i=this.parseTaskTime(t.time),s=(i.getTime()-e.getTime())/6e4;if(this.settings.taskReminder.enabled&&s>this.settings.taskReminder.minutesBefore){const s=new Date(i.getTime()-60*this.settings.taskReminder.minutesBefore*1e3).getTime()-e.getTime();if(s>0){const e=setTimeout(()=>{this.scheduledTasks.delete(t.id),this.cancelTaskNotifications(t.id),this.playNotificationSound("task_reminder"),this.showLocalNotification("Mission Alert: Time to Transform!",{body:`Your mission "${t.title}" is about to beginâ€”gear up!`,tag:`timeout_${t.id}`,data:{action:"snooze",taskId:t.id,type:"reminder"}})},s);this.scheduledTimeouts.set(`timeout_${t.id}`,e)}}if(this.settings.taskCompletion.enabled&&s>0){const s=i.getTime()-e.getTime();if(s>0){const e=setTimeout(()=>{this.scheduledTasks.delete(t.id),this.cancelTaskNotifications(t.id),this.playNotificationSound("task_completion"),this.showLocalNotification("Mission Success: Heroic Victory!",{body:`Your mission "${t.title}" is completeâ€”great work, hero!`,tag:`completion_${t.id}`,data:{action:"mark_done",taskId:t.id,type:"completion"}});const e=this.taskCompletionCallbacks.get(t.id);e&&e()},s);this.scheduledTimeouts.set(`completion_${t.id}`,e)}}}parseTaskTime(t){const[e,i]=t.split(":").map(Number),s=new Date,o=new Date(s.getFullYear(),s.getMonth(),s.getDate(),e,i);return o<=s&&o.setDate(o.getDate()+1),o}cancelTaskNotifications(t){["timeout","completion"].forEach(e=>{const i=`${e}_${t}`,s=this.scheduledTimeouts.get(i);s&&(clearTimeout(s),this.scheduledTimeouts.delete(i))}),this.taskCompletionCallbacks.delete(t),this.scheduledTasks.delete(t)}registerTaskCompletionCallback(t,e){this.taskCompletionCallbacks.set(t,e)}updateTaskCompletion(t,e){e&&this.cancelTaskNotifications(t)}setCallbacks({onTaskMarkDone:t,onTaskSnooze:e,onTaskExtend:i,onShowToast:s}){this.onTaskMarkDone=t,this.onTaskSnooze=e,this.onTaskExtend=i,this.onShowToast=s}getSettings(){return{...this.settings}}updateSettings(t){this.saveSettings(t)}async testNotification(t="default"){this.playNotificationSound(t),this.showLocalNotification({task_reminder:"Mission Alert: Time to Transform!",task_completion:"Mission Success: Heroic Victory!",task_archive:"Mission Log: Adventure Archived!",default:"ðŸš€ Test Notification"}[t],{body:{task_reminder:"This is a test mission alertâ€”get ready to act!",task_completion:"This is a test mission successâ€”well done, hero!",task_archive:"This is a test mission logâ€”adventure stored!",default:"This is a test notification from AstroTrix"}[t],tag:"test_notification",data:{type:t}})}isAppInBackground(){return document.hidden||"hidden"===document.visibilityState}notifyTaskArchived(t){this.isNotificationEnabled("task_archive")&&(this.playNotificationSound("task_archive"),this.showLocalNotification("Mission Log: Adventure Archived!",{body:`Your mission "${t.title}" is now logged for history`,tag:`archive_${t.id}`,data:{type:"archive"}}))}cleanup(){this.scheduledTimeouts.forEach(t=>{clearTimeout(t)}),this.scheduledTimeouts.clear(),this.taskCompletionCallbacks.clear(),this.scheduledTasks.clear()}};export{e as B,i as n};
